# 字节码编译文件
__pycache__/
*.py[codz]
*$py.class

# C扩展
*.so

# 分发/打包文件
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller相关文件
*.manifest
*.spec

# 安装日志
pip-log.txt
pip-delete-this-directory.txt

# 单元测试/覆盖率报告
htmlcov/
.tox/
.nox/
.coverage*
.cache
nosetests.xml
coverage.xml
*.cover
*.py.cover
.hypothesis/
.pytest_cache/
cover/

# 翻译文件
*.mo
*.pot

# Django相关文件
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask相关文件
instance/
.webassets-cache

# Scrapy相关文件
.scrapy

# Sphinx文档
docs/_build/

# PyBuilder相关文件
.pybuilder/
target/

# Jupyter Notebook相关文件
.ipynb_checkpoints

# IPython相关文件
profile_default/
ipython_config.py

# pyenv相关文件
# 对于库或包，可能希望忽略这些文件，因为代码旨在在多个环境中运行
# .python-version

# pipenv相关文件
# 根据pypa/pipenv#598建议，在版本控制中包含Pipfile.lock
# 但在协作时，如果有平台特定的依赖项或不支持跨平台的依赖项，pipenv可能会安装无法工作的依赖项
#Pipfile.lock

# UV相关文件
# 通常建议在版本控制中包含uv.lock
# 这对于二进制包特别推荐以确保可重现性，但对于库来说更常被忽略
#uv.lock

# poetry相关文件
# 通常建议在版本控制中包含poetry.lock
# 这对于二进制包特别推荐以确保可重现性，但对于库来说更常被忽略
#poetry.lock
#poetry.toml

# pdm相关文件
# 通常建议在版本控制中包含pdm.lock
# pdm建议在版本控制中包含项目范围的配置pdm.toml，但排除.pdm-python
#pdm.lock
#pdm.toml
.pdm-python
.pdm-build/

# pixi相关文件
# 通常建议在版本控制中包含pixi.lock
#pixi.lock
# pixi在.pixi目录中创建虚拟环境，就像venv模块在.venv目录中创建一样
# 建议不要在版本控制中包含此目录
.pixi

# PEP 582相关文件
__pypackages__/

# Celery相关文件
celerybeat-schedule
celerybeat.pid

# SageMath解析文件
*.sage.py

# 环境配置文件
.env*
!.env.example
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder项目设置
.spyderproject
.spyproject

# Rope项目设置
.ropeproject

# mkdocs文档
/site

# mypy相关文件
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre类型检查器
.pyre/

# pytype静态类型分析器
.pytype/

# Cython调试符号
cython_debug/

# PyCharm相关文件
# JetBrains特定模板维护在单独的JetBrains.gitignore中，可以在以下位置找到：
# https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# 可以添加到全局gitignore或合并到此文件中。如果需要更严格的选项（不推荐），可以取消注释以下内容以忽略整个idea文件夹
.idea/

# Abstra相关文件
.abstra/

# Visual Studio Code相关文件
# Visual Studio Code特定模板维护在单独的VisualStudioCode.gitignore中，可以在以下位置找到：
# https://github.com/github/gitignore/blob/main/Global/VisualStudioCode.gitignore
# 可以添加到全局gitignore或合并到此文件中。如果愿意，可以取消注释以下内容以忽略整个vscode文件夹
.vscode/

# Ruff相关文件
.ruff_cache/

# PyPI配置文件
.pypirc

# Cursor相关文件
.cursorignore
.cursorindexingignore

# Marimo相关文件
marimo/_static/
marimo/_lsp/
__marimo__/
